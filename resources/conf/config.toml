# The configuration file for mgw
[server]
host = "0.0.0.0"
port = "9843"
publicKeyPath = "/home/wso2/security/localhost.pem"
privateKeyPath = "/home/wso2/security/localhost.key"
username = "admin"
password = "admin"

[envoy]
listenerHost = "0.0.0.0"
listenerPort = 9095
clusterTimeoutInSeconds = 20
listenerTLSEnabled = true
listenerCertPath = "/home/wso2/security/localhost.pem"
listenerKeyPath = "/home/wso2/security/localhost.key"

[filter]
#Key Store Configuration
[filter.keystore]
location = "wso2carbon.jks"
type = "jks"
password = "wso2carbon"

#Trust store configuration
[filter.truststore]
location = "/home/wso2/mg/security/client-truststore.jks"
type = "jks"
password = "wso2carbon"

# JWT token authorization configurations. You can provide multiple JWT issuers
# Issuer 1
[[filter.jwtTokenConfig]]
    name="Resident Key Manager"
    issuer = "https://localhost:9443/oauth2/token"
    certificateAlias = "wso2carbon"
    # URL of the JWKs endpoint
    jwksURL = ""
    # Validate subscribed APIs
    validateSubscription = false
    # The claim in which the consumer key of the application is coming
    consumerKeyClaim = "azp"

# Configurations for retrieving API and subscription data from API Manager.
[filter.eventHub]
    # Enable/ Disable the feature
    enable = false
    # The API Manager URL
    serviceUrl = "https://localhost:9443/"
    # User name and password of the internal data api.
    username="admin"
    password="admin"
    # The message broker connection URL.
    eventListeningEndpoints = "amqp://admin:admin@carbon/carbon?brokerlist='tcp://localhost:5672'"

# Throttling configurations related to event publishing using a binary connection
[filter.throttlingConfig.binary]
 enabled = true
 # Credentials required to establish connection between Traffic Manager
 username = "admin"
 password = "admin"
 # Receiver URL and the authentication URL of the Traffic manager node/nodes
 [[filter.throttlingConfig.binary.URLGroup]]
   receiverURL = "tcp://localhost:9611"
   authURL = "ssl://192.168.1.102:9711"
 # Data publisher object pool configurations
 [filter.throttlingConfig.binary.publisher]
   maxIdleDataPublishingAgents = 1000
   initIdleObjectDataPublishingAgents = 200
 # Data publisher thread pool configurations
   publisherThreadPoolCoreSize = 200
   publisherThreadPoolMaximumSize = 1000
   publisherThreadPoolKeepAliveTime = 200
 [filter.throttlingConfig.binary.agent]
   # SSL Protocols
   sslEnabledProtocols = "TLSv1,TLSv1.1,TLSv1.2"
   # ciphers
   ciphers="TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_DSS_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA, TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDH_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256  ,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_DSS_WITH_AES_128_GCM_SHA256  ,TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA,TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA,SSL_RSA_WITH_3DES_EDE_CBC_SHA, TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA,TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA,SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA, SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA,TLS_EMPTY_RENEGOTIATION_INFO_SCSV"
   # The size of the queue event disruptor which handles events before they are published.
   # The value specified should always be the result of an exponent with 2 as the base.
   queueSize = 32768
   # The maximum number of events in a batch sent to the queue event disruptor at a given time
   batchSize = 200
   # The number of threads that will be reserved to handle events at the time you start
   corePoolSize = 1
   # Socket timeout
   socketTimeoutMS = 30000
   # The maximum number of threads that should be reserved at any given time to handle events
   maxPoolSize = 1
   # The amount of time which threads in excess of the core pool size may remain idle before being terminated.
   keepAliveTimeInPool = 20
   # The time interval between reconnection
   reconnectionInterval = 30
   # TCP connection pool configurations (for data publishing)
   maxTransportPoolSize = 250
   maxIdleConnections = 250
   evictionTimePeriod = 5500
   minIdleTimeInPool = 5000
   # SSL connection pool configurations (for authentication)
   secureMaxTransportPoolSize = 250
   secureMaxIdleConnections = 250
   secureEvictionTimePeriod = 5500
   secureMinIdleTimeInPool = 5000