[listenerConfig]
host="0.0.0.0"
httpPort=9090
httpsPort=9095
keyStorePath="${ballerina.home}/bre/security/ballerinaKeystore.p12"
keyStorePassword="ballerina"
trustStorePath="${ballerina.home}/bre/security/ballerinaTruststore.p12"
trustStorePassword="ballerina"
tokenListenerPort=9096

[authConfig]
authorizationHeader="Authorization"
removeAuthHeaderFromOutMessage=true

[keyManager]
serverUrl="https://localhost:9443"
tokenContext="oauth2"
timestampSkew=5000
external=false
  [keymanager.security.basic]
    enabled= true
    username="admin"
    password="admin"
  [keymanager.security.oauth2]
    enabled = false
    credentialBearer = "AUTH_HEADER_BEARER"
    tokenUrl = ""
    [keymanager.security.oauth2.clientCredential]
      enabled = false
      clientId = ""
      clientSecret = ""
      scopes = ""
    [keymanager.security.oauth2.password]
      enabled = false
      clientId = ""
      clientSecret = ""
      scopes = ""
      username= ""
      password = ""
    [keymanager.security.oauth2.directToken]
      enabled = false
      accessToken = ""
    [keymanager.security.oauth2.refresh]
      enabled = false
      refreshUrl = ""
      scopes = ""
      refreshToken = ""
      clientId = ""
      clientSecret = ""

[jwtTokenConfig]
issuer="https://localhost:9443/oauth2/token"
audience="http://org.wso2.apimgt/gateway"
certificateAlias="wso2apim"
validateSubscription=false

[jwtConfig]
header="X-JWT-Assertion"

[caching]
enabled=true
tokenCacheExpiryTime=900000
tokenCacheCapacity=10000
tokenCacheEvictionFactor=0.25

[analytics]
enable=false
uploadingTimeSpanInMillis=600000
initialDelayInMillis=5000
uploadingEndpoint="https://localhost:9444/analytics/v1.0/usage/upload-file"
rotatingPeriod=600000
taskUploadFiles=true
username="admin"
password="admin"

[http2]
enable=false

[mutualSSLConfig]
protocolName="TLS"
protocolVersions="TLSv1.2,TLSv1.1"
ciphers="TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_DSS_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA, TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDH_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256  ,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_DSS_WITH_AES_128_GCM_SHA256  ,TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA,TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA,SSL_RSA_WITH_3DES_EDE_CBC_SHA, TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA,TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA,SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA, SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA,TLS_EMPTY_RENEGOTIATION_INFO_SCSV"
sslVerifyClient="optional"

[b7a.users]
#[b7a.users.generalUser1]
#password="5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8"
[b7a.users.prometheus]
password="@sha256:{5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8}"
scopes = "observability"

[validationConfig]
enableRequestValidation = false
enableResponseValidation = false


[throttlingConfig]
enabledGlobalTMEventPublishing = false
jmsConnectioninitialContextFactory = "bmbInitialContextFactory"
jmsConnectionProviderUrl= "amqp://admin:admin@carbon/carbon?brokerlist='tcp://localhost:5672'"
jmsConnectionUsername = ""
jmsConnectionPassword = ""
throttleEndpointUrl = "https://localhost:9443/endpoints"
throttleEndpointbase64Header = "admin:admin"

[tokenRevocationConfig]
  [tokenRevocationConfig.realtime]
    enableRealtimeMessageRetrieval = false
    jmsConnectionTopic = "tokenRevocation"
    jmsConnectioninitialContextFactory = "bmbInitialContextFactory"
    jmsConnectionProviderUrl= "amqp://admin:admin@carbon/carbon?brokerlist='tcp://localhost:5672'"
    jmsConnectionUsername = ""
    jmsConnectionPassword = ""
  [tokenRevocationConfig.persistent]
    enablePersistentStorageRetrieval = false
    useDefault = true
    hostname = "https://127.0.0.1:2379/v2/keys/jti/"
    username = "root"
    password = "root"

[httpClients]
  verifyHostname=true

[b7a.observability.metrics]
# Flag to enable Metrics
enabled = false
reporter = "prometheus"

[b7a.observability.metrics.prometheus]
port=9797
jmx_port = 8080
secure_port = 9000

[b7a.observability.tracing]
# Flag to enable Tracing
enabled = false
name = "jaeger"

[b7a.observability.tracing.jaeger.reporter]
port=5775

##############################################################################
# Basic auth users
[b7a.users]
[b7a.users.generalUser1]
password="5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8"

###############################################################################
# API Key auth configs
[apikey.tokenConfigs]
validateAllowedAPIs=true

###############################################################################
# API Key STS token configs
[apikey.issuer.tokenConfig]
enabled=true
keyStorePath="${ballerina.home}/bre/security/ballerinaKeystore.p12"
keyStorePassword="ballerina"
keyStoreAlias="ballerina"
issuer="https://localhost:9443/oauth2/token"
audience="http://org.wso2.apimgt/gateway"
validityPeriod=600

###############################################################################
# API Key STS Allowed APIs
[apikey.issuer.apis]
#[apikey.issuer.apis.1]
#name="Swagger Petstore New"
#basepath="pizzashack"
#versions="1.0.0, v1, v2"
#[apikey.issuer.apis.2]
#name="MyAPI"
#basepath="myapi"
#versions="*"